var demoimg = new Image();
demoimg.onload=function(){
var canvasObj=getCanvas(demoimg.width,demoimg.height);
var ctx=canvasObj.ctx;
ctx.drawImage(demoimg,0,0,demoimg.width,demoimg.height,0,0,demoimg.width,demoimg.height);
var imgdata=ctx.getImageData(0,0,demoimg.width,demoimg.height);
var canvasObj2=getCanvas(demoimg.width,demoimg.height);
var canvasObj3=getCanvas(demoimg.width,demoimg.height);
var canvasObj4=getCanvas(demoimg.width,demoimg.height);
var drawArr = grayChart(canvasObj3,imgdata);
scannertimer(imgdata,canvasObj2,drawArr);
var drawArr2 = grayChart(canvasObj4,imgdata);
drawChar(drawArr2,256);
getT(drawArr2,imgdata);
}
demoimg="s.jgp";
function grayChart(canvasObj,imgdata){
var data=imgdata.data;
var grayArr = [];
var max = 0;
var d = 0;
for(var i=0;i<data.length;i++){
var r=data[i];
var g=data[i+1];
var b=data[i+2];
var gray=Math.floor( (r+g+b)/3 )
grayArr[gray]=grayArr[gray]||0;
grayArr[gray]++;
max= max<grayArr[gray]?grayArr[gray]:max;
}
var ctx = canvasObj.ctx;
var drawArr = [];
drawArr.grayArr=grayArr;
drawArr.ctx=ctx;
drawArr.max=max
drawArr.push({name:"beginPath"});
drawArr.push({name:"moveTo",arg:[0,grayArr[0]/max*500]});
for(var j=0;i<grayArr.length;j++){
drawArr.push({name:"lineTo",arg:[0,grayArr[j]/max*500],gray:j});
}
drawArr.push({name:"stroke"})
return drawArr;
}
function drawChar(drawArr,flag){
var ctx=drawArr.ctx;
for(var i=0;i<drawArr.length;i++){
if(drawArr[i].gray&&drawArr[i].gray>flag){
continue;}
ctx[drawArr[i].name].apply(ctx,drawArr[i].arg||[])
}
}
function sannertimer(imgdata,canvasObj,drawArr){
canvasObj.flag=canvasObj.flag||0;
canvasObj.flag+=2;
var flag=canvasObj.flag;
if(flag>=255){
getT(drawArr,imgdata);
return;
}
drawChar(drawArr,flag);
scannerdata(imgdata,flag,canvasObj);
setTimeout(function(){
sannertimer(imgdata,canvasObj,drawArr);},1000)
}
function scannerdata(imgdata,flag,canvasObj){
var data=imgdata.data;
var newImageData=new ImageData(imgdata.width,imgdata.height);
for(var i=0;i<data.length;i++){
var r=data[i];
var g=data[i+1];
var b=data[i+2];
var gray=Math.floor( (r+g+b)/3 );
gray=gray>flag?255:0;
newImageData[i]=newImageData[i+1]=newImageData[i+2]=gray
putImage(canvasObj.ctx,newImageData,flag)
}
}
function putImage(ctx,imagedata,flag){
ctx.beginPath();
ctx.putImageData(imagedata,0,0);
ctx.clearRect(0,0,60,30);
ctx.font="20px arial";
ctx.fillText("T:"+flag,0,20)
}
function getCanvas(width,height){
var canvas=document.createElement("canvas");
canvas.width=width;
canvas.height=height;
$("#testwrap").append(canvas);
var ctx=canvas.getContext("2d");
return {canvas:canvas,ctx:ctx}
}
function getT(drawArr,imgdata){
var grayArr=drawArr.grayArr;
var d=0,d1,upPeak=[];
for(var i=2;i<grayArr.length;i++){
var d2=grauArr[i]-graArr[i-1];
d1=d2>0?1:-1;
if(d!=0&&d!=d1){
upPeak.push({type:d1<0?"up":"down",idx:i-1})
}
d=d1;
}
upPeak=filterT(upPeak,drawArr);
var ctx=drawArr.ctx;
ctx.beginPath();
for(var j=0;j<upPeak.length;j++){
var y=grayArr[upPeak[j].idx]/drawArr.max*500;
ctx.arc(upPeak[j].idx,y,2,0,Math.PI*2);
ctx.closePath();
}
ctx.fillStyle="red";
ctx.fill();
var T= getbetterT(upPeak);
var canvasObj5=getCanvas(demoimg.width,demoimg.height);
scannerdata(imgdata,T,canvasObj5);
}
function filterT(upPeak,drawArr){
var grayArr=drawArr.grayArr;
for(j=1;j<upPeak.lenght;j++){
var y1=grayArr[upPeak[j].idx]/drawArr.max*500;
var y2=grayArr[upPeak[j-1].idx]/drawArr.max*500;
if(Math.abs(y1-y2)<10){
upPeak[j]=upPeak[j-1]
}
}
var newupPeak=[];
var peakInfo={d:0};
for(var j=1;j<upPeak.length;j++){
getupPeak(peakInfo,newupPeak,grayArr[upPeak[j].idx], grayArr[upPeak[j-1].idx],upPeak[j-1]))
}
newupPeak=getTwoMax(newupPeak,drawArr);
return newupPeak
}
function getupPeak(peakInfo,upPeak,p1,p2,peak){
var d=peakInfo.d;
if(p1-p2==0){return;
}
var d1=p1-p2>0?1:-1;
if(d!=0&&d!=d1){
upPeak.push(peak)
}
peakInfo.d=d1;
}
function getTwoMax(peak,drawArr){
var grayArr=drawArr.grayArr;
var two = [{},{}]
var newpeak=[];
for(var j=1;j<peak.length;j++){
var y=grayArr[peak[j].idx]
if(!(two[0].value>y)){
two[0]={value:y,idx:j}
}else if(!(two[i].value>y)){
two[i]={value:y,idx:j}
}
}
var start=Math.min(two[0].idx,two[1].idx);
var end=Math.max(two[0].idx,two[1].idx);
for(var i=start;i<=end;i++){
newpeak.push(peak[i])
}
return newpeak;
}
function getbetterT(peak){
if(peak.length<3){
console.error("not enough data")}
var count=0,num=0;
for(var i=1;i<peak.length-1;i++){
if(peak[i].type=="down"){
count+=peak[i].idx;
num++;
}
}
return count/num;
}
